version: '3.8'
volumes:
  db:
  wordpress_db:
  ombi:
  registry:
  mosquitto:
  nextcloud:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mpool/nextcloud
  influxdb-storage:
  grafana-storage:
networks:
  mgmt:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.4.0.0/16
            ip_range: 10.4.0.0/18
            aux_addresses:
              shim4: 10.4.0.2
    driver_opts:
      parent: bond0.4
  iot:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.6.0.0/16
            ip_range: 10.6.0.0/18
            aux_addresses:
              shim6: 10.6.0.2
    driver_opts:
      parent: bond0.6
  external:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.2.0.0/16
            ip_range: 10.2.0.0/18
            aux_addresses:
              shim3: 10.2.0.2
    driver_opts:
      parent: bond0.2
  internal:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.3.0.0/16
            ip_range: 10.3.0.0/18
            aux_addresses:
              shim2: 10.3.0.2
    driver_opts:
      parent: bond0.3
services:
  plex:
    container_name: plex
    ports:
      - "32400/tcp"
    image: plexinc/pms-docker
    networks:
      - external
    restart: unless-stopped
    environment:
      - TZ=America/New_York
    volumes:
      - /mpool/plex/config:/config
      - /mpool/plex/transcode:/transcode
      - /mpool/plex:/data
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "443:80"
    networks:
      internal:
        ipv4_address: 10.3.32.2
    environment:
      TZ: America/New_York
      WEBPASSWORD: {{ lookup('env', 'PIHOLE_PASSWORD') }}
    volumes:
      - {{ docker_persistent_data_path }}/pihole/conf:/etc/pihole
      - {{ docker_persistent_data_path }}/pihole/dnsmasq:/etc/dnsmasq.d
    restart: unless-stopped
  iperf3:
    container_name: iperf3
    image: networkstatic/iperf3
    ports:
      - "5201/tcp"
    networks:
      - internal
    command:
      - "-s"
    restart: unless-stopped
  nginx: 
    image: nginx:latest
    container_name: nginx
    networks:
      external:
        ipv4_address: {{ nginx_ip }}
    restart: unless-stopped
    volumes:
      - {{ docker_persistent_data_path }}/nginx/conf:/etc/nginx
      - {{ docker_persistent_data_path }}/nginx/webroot:/data/webroot
      - /var/log/nginx:/data/log
      - {{ docker_persistent_data_path }}/certs:/data/certs
  lab_nginx: 
    image: nginx:latest
    container_name: lab_nginx
    networks:
      internal:
        ipv4_address: {{ lab_nginx_ip }}
    restart: unless-stopped
    volumes:
      - {{ docker_persistent_data_path }}/lab_nginx/conf:/etc/nginx
      - /var/log/lab_nginx:/data/log
      - {{ docker_persistent_data_path }}/certs:/data/certs
  db:
    image: mariadb
    container_name: nextcloud_database
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    networks:
      - external
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD={{ lookup('env', 'NEXTCLOUD_DB_PASSWORD') }}
      - MYSQL_PASSWORD={{ lookup('env', 'NEXTCLOUD_DB_PASSWORD') }}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
  app:
    image: nextcloud:latest
    container_name: nextcloud
    networks:
      - external
    hostname: nkontur.com
    volumes:
      - nextcloud:/data
      - {{ docker_persistent_data_path }}/nextcloud/config:/var/www/html/config
      - {{ docker_persistent_data_path }}/nextcloud/mpm_prefork.conf:/etc/apache2/mods-available/mpm_prefork.conf
      - {{ docker_persistent_data_path }}/nextcloud/config/php.ini:/usr/local/etc/php/php.ini
      - /etc/localtime:/etc/localtime:ro
    restart: always
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    networks:
      - external
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - BASE_URL=/plex-requests
    volumes:
      - ombi:/config
      - /etc/ssl/certs:/etc/ssl/certs
      - /etc/ssl/private:/etc/ssl/private
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr:4.2.0-nightly
    container_name: radarr
    ports:
      - "443:7878"
    networks:
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - {{ docker_persistent_data_path }}/radarr:/config
      - /mpool/plex/Movies:/movies
      - /mpool/samba_share/nfs:/remote
    restart: unless-stopped
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    ports:
      - "443:9117"
    networks:
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - {{ docker_persistent_data_path }}/jackett:/config
    restart: unless-stopped
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    ports:
      - "443:8989"
    networks:
    - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - {{ docker_persistent_data_path }}/sonarr:/config
      - /mpool/plex/TV:/tv
      - /mpool/samba_share/nfs:/remote
    restart: unless-stopped
  booksonic:
    image: izderadicka/audioserve
    container_name: audioserve
    ports:
      - "443:3000"
    networks:
      - external
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - AUDIOSERVE_SHARED_SECRET=audiobooks_bepis123
      - VIRTUAL_HOST=audioserve.nkontur.com
      - LETSENCRYPT_HOST=audioserve.nkontur.com
    command: /audiobooks
    volumes:
      - /mpool/audioserve/audiobooks:/audiobooks
      - /mpool/audioserve/data:/data
    restart: unless-stopped
  grafana:
    container_name: grafana
    ports:
      - "443:3000"
    networks:
      - internal
    image: grafana/grafana
    restart: always
    volumes:
        - grafana-storage:/var/lib/grafana
        - {{ docker_persistent_data_path }}/grafana/grafana.ini:/etc/grafana/grafana.ini
  influxdb:
    container_name: influxdb
    ports:
      - "443:8086"
    networks:
      - internal
    image: influxdb:latest
    restart: always
    volumes:
        - influxdb-storage:/var/lib/influxdb
        - {{ docker_persistent_data_path }}/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=telegraf
      - DOCKER_INFLUXDB_INIT_PASSWORD={{ lookup('env', 'INFLUXDB_PASSWORD') }}
      - DOCKER_INFLUXDB_INIT_ORG=homelab
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
  gitlab:
    container_name: gitlab
    ports:
      - "22/tcp"
      - "443:80"
    networks:
      - internal
    image: 'gitlab/gitlab-ee:latest'
    restart: always
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.lab.nkontur.com'
    volumes:
      - '{{ docker_persistent_data_path }}/gitlab/config:/etc/gitlab'
      - '{{ docker_persistent_data_path }}/gitlab/logs:/var/log/gitlab'
      - '{{ docker_persistent_data_path }}/gitlab/data:/var/opt/gitlab'
  deluge:
    container_name: deluge
    ports:
      - "443:8112"
    image: 'lscr.io/linuxserver/deluge:latest'
    restart: always
    networks:
      internal:
        ipv4_address: {{ deluge_ip }}
    volumes:
      - '{{ docker_persistent_data_path }}/deluge:/config'
      - '/mpool/samba_share/nfs:/downloads'
  bitwarden:
    container_name: bitwarden
    ports:
      - "443:80"
    image: 'vaultwarden/server:latest'
    restart: always
    networks:
      - external
    volumes:
      - '{{ docker_persistent_data_path }}/bitwarden/data/:/data/'
    env_file:
      - '{{ docker_persistent_data_path }}/bitwarden/global.override.env'
  blog:
    image: wordpress
    container_name: wordpress
    ports:
      - "443:80"
    networks:
      - external
    environment:
      WORDPRESS_DB_HOST: wordpress_db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: {{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - {{ docker_persistent_data_path }}/wordpress/html:/var/www/html
      - {{ docker_persistent_data_path }}/wordpress/config:/etc/wordpress
    restart: always
  wordpress_db:
    image: mysql
    container_name: wordpress_db
    networks:
      - external
    restart: always
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: {{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}
      MYSQL_ROOT_PASSWORD: {{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}
    volumes:
      - wordpress_db:/var/lib/mysql
  minecraft_danny:
    container_name: minecraft_danny
    ports:
      - "25564:25565/tcp"
    networks:
      external:
        ipv4_address: 10.2.32.3
    image: itzg/minecraft-server
    environment:
      EULA: "TRUE"
      MEMORY: "4G"
    tty: true
    stdin_open: true
    volumes:
      - "{{ docker_persistent_data_path }}/minecraft/danny:/data"
    restart: unless-stopped
  minecraft:
    container_name: minecraft
    ports:
      - "25565:25565/tcp"
    networks:
      external:
        ipv4_address: 10.2.32.2
    image: itzg/minecraft-server
    environment:
      EULA: "TRUE"
      MEMORY: "4G"
    tty: true
    stdin_open: true
    volumes:
      - "{{ docker_persistent_data_path }}/minecraft/main:/data"
    restart: unless-stopped
  diagram:
    container_name: diagram
    ports:
      - "443:8080"
    networks:
      internal:
    image: jgraph/drawio
    restart: unless-stopped
  watchtower:
    container_name: watchtower
    networks:
      internal:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600
  homeassistant:
    container_name: homeassistant
    networks:
      - internal
      - iot
      - external
    ports:
      - "443:8123"
    image: "ghcr.io/home-assistant/home-assistant:2022.8"
    volumes:
      - "{{ docker_persistent_data_path }}/homeassistant:/config"
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
  snapserver:
    container_name: snapserver
    networks:
      iot:
        ipv4_address: {{ snapserver_address }}
    image: "registry.lab.nkontur.com/snapcast"
    volumes:
      - "{{ docker_persistent_data_path }}/snapserver/snapserver.conf:/etc/snapserver.conf"
    restart: unless-stopped
  registry:
    container_name: registry
    restart: always
    image: registry:2
    networks:
      mgmt:
        ipv4_address: {{ registry_address }}
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/nkontur.com/certificates/_.nkontur.com.crt
      REGISTRY_HTTP_TLS_KEY: /certs/nkontur.com/certificates/_.nkontur.com.key
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_HTTP_ADDR: "0.0.0.0:443"
      VIRTUAL_HOST: registry.lab.nkontur.com
      LETSENCRYPT_HOST: registry.lab.nkontur.com
    volumes:
      - registry:/var/lib/registry
      - {{ docker_persistent_data_path }}/registry/auth:/auth
      - {{ docker_persistent_data_path }}/certs:/certs
  frigate:
    container_name: frigate
    restart: unless-stopped
    image: blakeblackshear/frigate:0.11.0-rc2
    networks:
      iot:
        ipv4_address: {{ frigate_address }}
    shm_size: "64mb"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker_persistent_data_path }}/frigate/config.yml:/config/config.yml:ro"
      - /mpool/plex/frigate:/media/frigate
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    networks:
      iot:
        ipv4_address: {{ mosquitto_address }}
    volumes:
      - "{{ docker_persistent_data_path }}/mqtt/conf:/mosquitto/config"
      - mosquitto:/mosquitto/data
      - {{ docker_persistent_data_path }}/certs/nkontur.com/certificates:/mosquitto/certs
  amcrest2mqtt:
    container_name: amcrest2mqtt
    image: dchesterton/amcrest2mqtt:latest
    restart: unless-stopped
    networks:
      iot:
    volumes:
      - /persistent_data/application/certs/nkontur.com/certificates:/certs
    environment:
      AMCREST_HOST: 10.6.128.9
      AMCREST_PASSWORD: {{ lookup('env', 'DOORBELL_PASS') }}
      MQTT_HOST: {{ mosquitto_address }}
      MQTT_USERNAME: mosquitto
      MQTT_PASSWORD: {{ lookup('env', 'MQTT_PASS') }}
      HOME_ASSISTANT: "true"
      MQTT_TLS_ENABLED: "true"
      MQTT_TLS_CA_CERT: "/etc/ssl/certs/ca-cert-ISRG_Root_X1.pem"
      MQTT_TLS_CERT: "/certs/_.nkontur.com.crt"
      MQTT_TLS_KEY: "/certs/_.nkontur.com.key"
