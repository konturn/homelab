volumes:
  db:
  wordpress_db:
  ombi:
  fifos:
  registry:
  compreface:
  mosquitto:
  nextcloud:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mpool/nextcloud/nextcloud
  influxdb-storage:
  grafana-storage:
  otp_data:
networks:
  mgmt:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.4.0.0/16
            ip_range: 10.4.0.0/18
            aux_addresses:
              shim4: 10.4.0.2
    driver_opts:
      parent: bond0.4
  iot:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.6.0.0/16
            ip_range: 10.6.0.0/18
            aux_addresses:
              shim6: 10.6.0.2
    driver_opts:
      parent: bond0.6
  external:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.2.0.0/16
            ip_range: 10.2.0.0/18
            aux_addresses:
              shim3: 10.2.0.2
    driver_opts:
      parent: bond0.2
  internal:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.3.0.0/16
            ip_range: 10.3.0.0/18
            aux_addresses:
              shim2: 10.3.0.2
    driver_opts:
      parent: bond0.3
  guest:
    driver: macvlan
    ipam:
      config:
          - subnet: 10.5.0.0/16
            ip_range: 10.5.0.0/18
            aux_addresses:
              shim2: 10.5.0.2
    driver_opts:
      parent: bond0.5
services:
  plex:
    container_name: plex
    ports:
      - "32400/tcp"
    image: plexinc/pms-docker
    networks:
      - external
      - internal
    restart: unless-stopped
    runtime: nvidia
    environment:
      - TZ=America/New_York
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
    volumes:
      - /mpool/plex/config:/config
      - /mpool/plex/transcode:/transcode
      - /mpool/plex:/data
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "443:80"
    networks:
      internal:
        ipv4_address: {{ pihole_ip }}
    environment:
      TZ: America/New_York
      WEBPASSWORD: {{ lookup('env', 'PIHOLE_PASSWORD') }}
    volumes:
      - {{ docker_persistent_data_path }}/pihole/conf:/etc/pihole
      - {{ docker_persistent_data_path }}/pihole/dnsmasq:/etc/dnsmasq.d
    restart: unless-stopped
  iperf3:
    container_name: iperf3
    image: networkstatic/iperf3
    ports:
      - "5201/tcp"
    networks:
      - internal
    command:
      - "-s"
    restart: unless-stopped
  nginx: 
    image: nginx:latest
    container_name: nginx
    networks:
      external:
        ipv4_address: {{ nginx_ip }}
    restart: unless-stopped
    volumes:
      - {{ docker_persistent_data_path }}/nginx/conf:/etc/nginx
      - {{ docker_persistent_data_path }}/nginx/webroot:/data/webroot
      - /var/log/nginx:/data/log
      - {{ docker_persistent_data_path }}/certs:/data/certs
  lab_nginx: 
    image: nginx:latest
    container_name: lab_nginx
    networks:
      internal:
        ipv4_address: {{ lab_nginx_ip }}
    restart: unless-stopped
    volumes:
      - {{ docker_persistent_data_path }}/lab_nginx/conf:/etc/nginx
      - /var/log/lab_nginx:/data/log
      - {{ docker_persistent_data_path }}/certs:/data/certs
  iot_nginx: 
    image: nginx:latest
    container_name: iot_nginx
    networks:
      iot:
        ipv4_address: {{ iot_nginx_ip }}
    restart: unless-stopped
    volumes:
      - {{ docker_persistent_data_path }}/iot_nginx/conf:/etc/nginx
      - /var/log/iot_nginx:/data/log
      - {{ docker_persistent_data_path }}/certs:/data/certs
  db:
    image: mariadb
    container_name: nextcloud_database
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    networks:
      - external
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD={{ lookup('env', 'NEXTCLOUD_DB_PASSWORD') }}
      - MYSQL_PASSWORD={{ lookup('env', 'NEXTCLOUD_DB_PASSWORD') }}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
  app:
    image: nextcloud:24.0.5
    container_name: nextcloud
    networks:
      - external
    hostname: nkontur.com
    volumes:
      - nextcloud:/data
      - {{ docker_persistent_data_path }}/nextcloud/config:/var/www/html/config
      - {{ docker_persistent_data_path }}/nextcloud/mpm_prefork.conf:/etc/apache2/mods-available/mpm_prefork.conf
      - {{ docker_persistent_data_path }}/nextcloud/config/php.ini:/usr/local/etc/php/php.ini
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    networks:
      - external
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - BASE_URL=/plex-requests
    volumes:
      - ombi:/config
      - /etc/ssl/certs:/etc/ssl/certs
      - /etc/ssl/private:/etc/ssl/private
    restart: unless-stopped
  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    ports:
      - "6789:6789"
    networks:
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - {{ docker_persistent_data_path }}/nzbget:/config
      - /mpool/plex/Movies:/movies
      - /mpool/samba_share/nfs:/remote
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr:5.0.0-nightly
    container_name: radarr
    ports:
      - "443:7878"
    networks:
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - {{ docker_persistent_data_path }}/radarr:/config
      - /mpool/plex/Movies:/movies
      - /mpool/samba_share/nfs:/remote
    restart: unless-stopped
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    ports:
      - "443:9117"
    networks:
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - {{ docker_persistent_data_path }}/jackett:/config
    restart: unless-stopped
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    ports:
      - "443:8989"
    networks:
    - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - {{ docker_persistent_data_path }}/sonarr:/config
      - /mpool/plex/TV:/tv
      - /mpool/samba_share/nfs:/remote
    restart: unless-stopped
  booksonic:
    image: izderadicka/audioserve
    container_name: audioserve
    ports:
      - "443:3000"
    networks:
      - external
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - AUDIOSERVE_SHARED_SECRET=audiobooks_bepis123
      - VIRTUAL_HOST=audioserve.nkontur.com
      - LETSENCRYPT_HOST=audioserve.nkontur.com
    command: /audiobooks
    volumes:
      - /mpool/audioserve/audiobooks:/audiobooks
      - /mpool/audioserve/data:/data
    restart: unless-stopped
  grafana:
    container_name: grafana
    ports:
      - "443:3000"
    networks:
      - internal
    image: grafana/grafana
    restart: unless-stopped
    volumes:
        - grafana-storage:/var/lib/grafana
        - {{ docker_persistent_data_path }}/grafana/grafana.ini:/etc/grafana/grafana.ini
  influxdb:
    container_name: influxdb
    ports:
      - "443:8086"
    networks:
      - internal
    image: influxdb:latest
    restart: unless-stopped
    volumes:
        - influxdb-storage:/var/lib/influxdb
        - {{ docker_persistent_data_path }}/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=telegraf
      - DOCKER_INFLUXDB_INIT_PASSWORD={{ lookup('env', 'INFLUXDB_PASSWORD') }}
      - DOCKER_INFLUXDB_INIT_ORG=homelab
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
  gitlab:
    container_name: gitlab
    ports:
      - "22/tcp"
      - "443:80"
    networks:
      - internal
    image: 'gitlab/gitlab-ee:latest'
    restart: unless-stopped
    volumes:
      - '{{ docker_persistent_data_path }}/gitlab/config:/etc/gitlab'
      - '{{ docker_persistent_data_path }}/gitlab/logs:/var/log/gitlab'
      - '{{ docker_persistent_data_path }}/gitlab/data:/var/opt/gitlab'
  deluge:
    container_name: deluge
    ports:
      - "443:8112"
    image: 'lscr.io/linuxserver/deluge:latest'
    restart: unless-stopped
    networks:
      internal:
        ipv4_address: {{ deluge_ip }}
    volumes:
      - '{{ docker_persistent_data_path }}/deluge:/config'
      - '/mpool/samba_share/nfs:/downloads'
  bitwarden:
    container_name: bitwarden
    ports:
      - "443:80"
    image: 'vaultwarden/server:latest'
    restart: unless-stopped
    networks:
      - external
    volumes:
      - '{{ docker_persistent_data_path }}/bitwarden/data/:/data/'
    env_file:
      - '{{ docker_persistent_data_path }}/bitwarden/global.override.env'
  blog:
    image: wordpress
    container_name: wordpress
    ports:
      - "443:80"
    networks:
      - external
    environment:
      WORDPRESS_DB_HOST: wordpress_db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: {{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - {{ docker_persistent_data_path }}/wordpress/html:/var/www/html
      - {{ docker_persistent_data_path }}/wordpress/config:/etc/wordpress
    restart: unless-stopped
  wordpress_db:
    image: mysql
    container_name: wordpress_db
    networks:
      - external
    restart: unless-stopped
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: {{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}
      MYSQL_ROOT_PASSWORD: {{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}
    volumes:
      - wordpress_db:/var/lib/mysql
  diagram:
    container_name: diagram
    ports:
      - "443:8080"
    networks:
      internal:
    image: jgraph/drawio
    restart: unless-stopped
  watchtower:
    container_name: watchtower
    restart: unless-stopped
    networks:
      internal:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600
  piper:
    image: rhasspy/wyoming-piper
    container_name: piper
    volumes:
      - "{{ docker_persistent_data_path }}/piper:/data"
    networks:
      - iot
    command: --voice en_US-ryan-high
    restart: unless-stopped
  openwakeword:
    image: rhasspy/wyoming-openwakeword
    container_name: openwakeword
    networks:
      - iot
    volumes:
      - "{{ docker_persistent_data_path }}/openwakeword:/data"
    command: --model alexa
    restart: unless-stopped
  whisper:
    image: rhasspy/wyoming-whisper:latest
    container_name: whisper
    volumes:
      - /persistent_data/application/whisper:/config
      - /usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8:/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8:ro
      - /usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8:/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8:ro
      - /usr/lib/x86_64-linux-gnu/libcublasLt.so.11:/usr/lib/x86_64-linux-gnu/libcublasLt.so.12:ro
      - /usr/lib/x86_64-linux-gnu/libcublas.so.11:/usr/lib/x86_64-linux-gnu/libcublas.so.12:ro
    command: --model tiny-int8 --language no --beam-size 5
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    restart: unless-stopped
    networks:
      - iot
  homeassistant:
    container_name: homeassistant
    networks:
      - internal
      - iot
      - external
    depends_on:
      - frigate
      - plex
      - amcrest2mqtt
      - snapserver
      - double-take
    ports:
      - "443:8123"
    devices: 
      - "/dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller_ETDRb11A920-if00-port0:/dev/ttyUSB0"
      - "/dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller-if00-port0:/dev/ttyUSB1"
    image: "homeassistant/home-assistant:2024.6"
    volumes:
      - "{{ docker_persistent_data_path }}/homeassistant:/config"
      - /etc/localtime:/etc/localtime:ro
    command: ["/bin/bash", "-c", "ip route del default; ip route add default via 10.3.0.1 dev eth1; /init"]
    cap_add:
      - NET_ADMIN # So we can override default route
    restart: unless-stopped
  snapserver:
    container_name: snapserver
    hostname: snapserver
    networks:
      iot:
        ipv4_address: {{ snapserver_address }}
    image: "registry.lab.nkontur.com/snapcast"
    volumes:
      - "{{ docker_persistent_data_path }}/snapserver/snapserver.conf:/etc/snapserver.conf"
      - "{{ docker_persistent_data_path }}/snapserver/server.json:/root/.config/snapserver/server.json"
      - "/tmp/snapfifo:/tmp/snapfifo"
      - "fifos:/tmp/fifo"
    restart: unless-stopped
    devices:
      - "/dev/snd"
  snapclient_office:
    container_name: snapclient_office
    networks:
      iot:
    image: "registry.lab.nkontur.com/snapclient"
    restart: unless-stopped
    devices:
      - "/dev/snd"
    command:
      - "-h"
      - {{ snapserver_address }}
      - "-s"
      - "plughw:CARD=Office,DEV=0"
      - "--hostID"
      - "office"
  snapclient_global:
    container_name: snapclient_global
    networks:
      iot:
    image: "registry.lab.nkontur.com/snapclient"
    restart: unless-stopped
    devices:
      - "/dev/snd"
    command:
      - "-h"
      - {{ snapserver_address }}
      - "-s"
      - "plughw:CARD=Global,DEV=0"
      - "--hostID"
      - "global"
  snapclient_kitchen:
    container_name: snapclient_kitchen
    networks:
      iot:
    image: "registry.lab.nkontur.com/snapclient"
    restart: unless-stopped
    devices:
      - "/dev/snd"
    command:
      - "-h"
      - {{ snapserver_address }}
      - "-s"
      - "plughw:CARD=Kitchen,DEV=0"
      - "--hostID"
      - "kitchen"
  snapclient_main_bedroom:
    container_name: snapclient_main_bedroom
    networks:
      iot:
    image: "registry.lab.nkontur.com/snapclient"
    restart: unless-stopped
    devices:
      - "/dev/snd"
    command:
      - "-h"
      - {{ snapserver_address }}
      - "-s"
      - "plughw:CARD=Main_Bedroom,DEV=0"
      - "--hostID"
      - "main_bedroom"
  snapclient_main_bathroom:
    container_name: snapclient_main_bathroom
    networks:
      iot:
    image: "registry.lab.nkontur.com/snapclient"
    restart: unless-stopped
    devices:
      - "/dev/snd"
    command:
      - "-h"
      - {{ snapserver_address }}
      - "-s"
      - "plughw:CARD=Main_Bathroom,DEV=0"
      - "--hostID"
      - "main_bathroom"
  snapclient_guest_bathroom:
    container_name: snapclient_guest_bathroom
    networks:
      iot:
    image: "registry.lab.nkontur.com/snapclient"
    restart: unless-stopped
    devices:
      - "/dev/snd"
    command:
      - "-h"
      - {{ snapserver_address }}
      - "-s"
      - "plughw:CARD=Guest_Bathroom,DEV=0"
      - "--hostID"
      - "guest_bathroom"
  snapclient_guest_bedroom:
    container_name: snapclient_guest_bedroom
    networks:
      iot:
    image: "registry.lab.nkontur.com/snapclient"
    restart: unless-stopped
    devices:
      - "/dev/snd"
    command:
      - "-h"
      - {{ snapserver_address }}
      - "-s"
      - "plughw:CARD=Guest_Bedroom,DEV=0"
      - "--hostID"
      - "guest_bedroom"
  registry:
    container_name: registry
    restart: unless-stopped
    image: registry:2
    networks:
      mgmt:
        ipv4_address: {{ registry_address }}
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/nkontur.com/live/iot.lab.nkontur.com-0001/cert.pem
      REGISTRY_HTTP_TLS_KEY: /certs/nkontur.com/live/iot.lab.nkontur.com-0001/privkey.pem
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_HTTP_ADDR: "0.0.0.0:443"
      VIRTUAL_HOST: registry.lab.nkontur.com
      LETSENCRYPT_HOST: registry.lab.nkontur.com
    volumes:
      - registry:/var/lib/registry
      - {{ docker_persistent_data_path }}/registry/auth:/auth
      - {{ docker_persistent_data_path }}/certs:/certs
  frigate:
    container_name: frigate
    restart: unless-stopped
    image: ghcr.io/blakeblackshear/frigate:0.13.2-tensorrt
    depends_on:
      - mosquitto
    networks:
      iot:
        ipv4_address: {{ frigate_address }}
    ports:
      - "443:5000"
    shm_size: "512mb"
    runtime: nvidia
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker_persistent_data_path }}/frigate:/config"
      - /mpool/plex/frigate:/media/frigate
      - "{{ docker_persistent_data_path }}/certs:/certs"
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      iot:
        ipv4_address: {{ mosquitto_address }}
    volumes:
      - "{{ docker_persistent_data_path }}/mqtt/conf:/mosquitto/config"
      - mosquitto:/mosquitto/data
      - "{{ docker_persistent_data_path }}/certs:/mosquitto/certs"
  amcrest2mqtt:
    container_name: amcrest2mqtt
    image: registry.lab.nkontur.com/amcrest2mqtt:latest
    depends_on:
      - mosquitto
    restart: unless-stopped
    networks:
      iot:
    volumes:
      - "{{ docker_persistent_data_path }}/certs:/certs"
    environment:
      AMCREST_HOST: 10.6.128.9
      AMCREST_PASSWORD: {{ lookup('env', 'DOORBELL_PASS') }}
      MQTT_HOST: "mqtt.lab.nkontur.com"
      MQTT_USERNAME: mosquitto
      MQTT_PASSWORD: {{ lookup('env', 'MQTT_PASS') }}
      HOME_ASSISTANT: "true"
      MQTT_TLS_ENABLED: "true"
      MQTT_TLS_CA_CERT: "/etc/ssl/certs/ca-cert-ISRG_Root_X1.pem"
      MQTT_TLS_CERT: "/certs/nkontur.com/live/iot.lab.nkontur.com-0001/cert.pem"
      MQTT_TLS_KEY: "/certs/nkontur.com/live/iot.lab.nkontur.com-0001/privkey.pem"
      STORAGE_POLL_INTERVAL: 0

  compreface-postgres-db:
    image: postgres:11.5
    container_name: "compreface-postgres-db"
    restart: unless-stopped
    networks:
      iot:
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD={{ lookup('env', 'COMPREFACE_POSTGRES_PASS') }}
      - POSTGRES_DB=frs
    volumes:
      - compreface:/var/lib/postgresql/data
  
  compreface-admin:
    image: exadel/compreface-admin:1.0.1
    container_name: "compreface-admin"
    restart: unless-stopped
    networks:
      iot:
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD={{ lookup('env', 'COMPREFACE_POSTGRES_PASS') }}
      - POSTGRES_URL=jdbc:postgresql://compreface-postgres-db:5432/frs
      - SPRING_PROFILES_ACTIVE=dev
      - ENABLE_EMAIL_SERVER=false
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_USERNAME=
      - EMAIL_FROM=
      - EMAIL_PASSWORD=
      - ADMIN_JAVA_OPTS=-Xmx8g
    depends_on:
      - compreface-postgres-db
      - compreface-api
  
  compreface-api:
    image: exadel/compreface-api:1.0.1
    container_name: "compreface-api"
    restart: unless-stopped
    networks:
      iot:
    depends_on:
      - compreface-postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD={{ lookup('env', 'COMPREFACE_POSTGRES_PASS') }}
      - POSTGRES_URL=jdbc:postgresql://compreface-postgres-db:5432/frs
      - SPRING_PROFILES_ACTIVE=dev
      - API_JAVA_OPTS=-Xmx8g
      - SAVE_IMAGES_TO_DB=true
  
  compreface-fe:
    image: exadel/compreface-fe:1.0.1
    container_name: "compreface-ui"
    restart: unless-stopped
    networks:
      iot:
    ports:
      - "443:80"
    depends_on:
      - compreface-api
      - compreface-admin
  
  compreface-core:
    image: exadel/compreface-core:1.0.1
    container_name: "compreface-core"
    networks:
      iot:
    restart: unless-stopped
    environment:
      - ML_PORT=3000
  double-take:
    container_name: double-take
    image: registry.lab.nkontur.com/double-take:test9
    restart: unless-stopped
    networks:
      iot:
    volumes:
      - "{{ docker_persistent_data_path }}/double-take:/.storage"
      - "{{ docker_persistent_data_path }}/certs:/certs"
    ports:
      - 443:3000
  bind:
    container_name: bind
    image: internetsystemsconsortium/bind9:9.18
    networks:
      internal:
        ipv4_address: {{ bind_ip }}
    volumes:
      - {{ docker_persistent_data_path }}/bind/named.conf.local:/etc/bind/named.conf.local
      - {{ docker_persistent_data_path }}/bind/db.lab.nkontur.com:/var/lib/bind/db.lab.nkontur.com
      - {{ docker_persistent_data_path }}/bind/rndc.key:/etc/bind/rndc.key
    restart: unless-stopped
  octoprint:
    image: "octoprint/octoprint"
    container_name: octoprint
    restart: unless-stopped
    networks:
      iot:
    environment:
      ENABLE_MJPG_STREAMER: "true"
    devices:
      - "/dev/serial/by-id/usb-Prusa_Research__prusa3d.com__Original_Prusa_i3_MK3_CZPX4222X004XC90532-if00:/dev/ttyUSB1"
      - "/dev/video1:/dev/video0"
    volumes:
        - "{{ docker_persistent_data_path }}/octoprint:/octoprint"
    ports:
        - "443:80"
  ambientweather:
    image: ghcr.io/neilenns/ambientweather2mqtt:latest
    restart: unless-stopped
    container_name: ambientweather
    networks:
      iot:
        ipv4_address: {{ weather_mqtt_bridge_ip }}
    environment:
      STATION_MAC_ADDRESS: {{ weather_station_mac }}
      MQTT_SERVER: "mqtts://mqtt.lab.nkontur.com:1883"
      TZ: America/New_York
      PORT: 8080
      MQTT_USERNAME: mosquitto
      MQTT_PASSWORD: {{ lookup('env', 'MQTT_PASS') }}
      MQTT_REJECT_UNAUTHORIZED: "false"
  paperless-ngx:
    image: lscr.io/linuxserver/paperless-ngx:latest
    container_name: paperless-ngx
    networks:
      internal:
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - PAPERLESS_URL=https://paperless-ngx.lab.nkontur.com
    volumes:
      - "{{ docker_persistent_data_path }}/paperless:/config"
      - "/mpool/nextcloud/paperless:/data"
    restart: unless-stopped
  mopidy:
    image: wernight/mopidy
    container_name: mopidy
    networks:
      iot:
        ipv4_address: {{ mopidy_address }}
    environment:
      - TZ=America/New_York
    volumes:
      - "{{ docker_persistent_data_path }}/mopidy/media:/var/lib/mopidy/media:ro"
      - "{{ docker_persistent_data_path }}/mopidy/local:/var/lib/mopidy/local"
      - "{{ docker_persistent_data_path }}/mopidy/playlists:/var/lib/mopidy/playlists"
      - "{{ docker_persistent_data_path }}/mopidy/config/mopidy.conf:/config/mopidy.conf"
      - "fifos:/tmp/fifo"
    devices:
      - "/dev/snd"
    ports:
      - "443:6680"
    restart: unless-stopped
