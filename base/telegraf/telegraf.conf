[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  
  gather_services = false

  container_name_include = []
  container_name_exclude = []

  timeout = "5s"

  docker_label_include = []
  docker_label_exclude = []

  perdevice = true

  total = false
[[inputs.snmp]]
  ## Agent addresses to retrieve values from.
  ##   example: agents = ["udp://127.0.0.1:161"]
  ##            agents = ["tcp://127.0.0.1:161"]
  agents = ["udp://ups.lab.nkontur.com:161"]

  ## Timeout for each request.
  timeout = "5s"

  ## SNMP version; can be 1, 2, or 3.
  version = 3

  ## SNMP community string.
  community = "public"

  ## Number of retries to attempt.
  retries = 3

  ## The GETBULK max-repetitions parameter.
  # max_repetitions = 10

  ## SNMPv3 authentication and encryption options.
  ##
  ## Security Name.
   sec_name = "apc1"
  ## Authentication protocol; one of "MD5", "SHA", or "".
  auth_protocol = "MD5"
  ## Authentication password.
   auth_password = "{{ lookup('env', 'SNMP_PASSWORD') }}"
  ## Security Level; one of "noAuthNoPriv", "authNoPriv", or "authPriv".
  sec_level = "authPriv"
  ## Context Name.
  # context_name = ""
  ## Privacy protocol used for encrypted messages; one of "DES", "AES" or "".
   priv_protocol = "aes"
  ## Privacy password used for encrypted messages.
  priv_password = "{{ lookup('env', 'SNMP_PASSWORD') }}"

  ## Add fields and tables defining the variables you wish to collect.  This
  ## example collects the system uptime and interface variables.  Reference the
  ## full plugin documentation for configuration details.
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsOutputCurrent.1"
    name = "consumption"
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsBatteryTemperature.0"
    name = "temperature"
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsOutputPercentLoad.1"
    name = "load"
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsOutputVoltage.1"
    name = "voltage"
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsEstimatedMinutesRemaining.0"
    name = "minutes"
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsEstimatedChargeRemaining.0"
    name = "percent_charge"
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsBatteryStatus.0"
    name = "status"
  [[inputs.snmp.field]]
    oid = "UPS-MIB::upsSecondsOnBattery.0"
    name = "batterySeconds"

[[inputs.ipmi_sensor]]
        path = "/usr/bin/ipmitool"
        servers = ["ADMIN:{{ lookup('env', 'IPMI_PASSWORD') }}@lan(ipmi.lab.nkontur.com)"]
        interval = "30s"
        timeout = "20s"
[[inputs.cpu]]
    percpu = true
    totalcpu = true
    collect_cpu_time = false
    report_active = true
[[inputs.disk]]
    ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
[[inputs.io]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.system]]
[[inputs.swap]]
[[inputs.netstat]]
[[inputs.processes]]
[[inputs.kernel]]
[[inputs.ping]]
interval = "60s"
urls = ["208.67.222.222", "208.67.220.220", "amazon.com", "github.com"]
count = 4
ping_interval = 1.0
timeout = 2.0
#[[inputs.logparser]]
#  files = ["/var/log/nginx/access.log"]
#  from_beginning = true
#  name_override = "nginx_access_log"
#  [inputs.logparser.grok]
#    patterns = ["%{COMBINED_LOG_FORMAT}"]
[[outputs.influxdb_v2]]
 ## The URLs of the InfluxDB cluster nodes.
 ##
 ## Multiple URLs can be specified for a single cluster, only ONE of the
 ## urls will be written to each interval.
 ## urls exp: http://127.0.0.1:9999
 urls = ["https://influxdb.lab.nkontur.com"]

 ## Token for authentication.
 token = "{{ lookup('env', 'INFLUXDB_TELEGRAF_TOKEN') }}"

 ## Organization is the name of the organization you wish to write to; must exist.
 organization = "homelab"

 ## Destination bucket to write into.
 bucket = "metrics"

