- name: Ensure proper packages are installed
  apt:
    name:
      - isc-dhcp-server
      - wireguard
      - keepalived
      - netfilter-persistent
      - iptables-persistent
    state: latest
    update_cache: yes

### Configure networking on host
- name: Interfaces config file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/fallback/interfaces.d/vlans' }}"
    dest: '/etc/network/interfaces.d/vlans'
    owner: root
    group: root
    mode: 0600
  register: interfaces

- name: Reload networking daemon to pick up changes
  ansible.builtin.systemd:
    name: networking
    state: restarted
  when: interfaces.changed
  ignore_errors: true

- name: Template the iptables rules file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/iptables/rules.v4' }}"
    dest: /etc/iptables/rules.v4
    owner: root
    group: root
    mode: '0640'
  register: iptables

- name: Restore netfilter rules
  ansible.builtin.command: netfilter-persistent reload
  become: yes
  when: iptables.changed

- name: Populate RNDC key file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/dhcp/rndc.key' }}"
    dest: /etc/dhcp/rndc.key
    owner: root
    group: root
    mode: '0640'

- name: Populate DHCP conf file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/dhcp/dhcpd.conf' }}"
    dest: /etc/dhcp/dhcpd.conf
    owner: root
    group: root
    mode: '0640'
  register: dhcp

- name: Restart isc-dhcp-server when the drop-in files change
  service:
    name: isc-dhcp-server
    state: restarted
    enabled: yes
  when: dhcp.changed
  ignore_errors: true

- name: Populate VRRP conf file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/vrrp/keepalived.conf' }}"
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: '0640'
  register: keepalived

- name: Restart isc-dhcp-server when the drop-in files change
  service:
    name: keepalived
    state: restarted
    enabled: yes
  when: keepalived.changed

- name: ensure required pip-packages are installed within docker image
  pip:
    name:
      - docker
      - PyYAML
      - docker-compose

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add docker repository to apt
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Install docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
    update_cache: yes

- name: Make sure docker is started and enabled
  service:
    name: docker
    state: started
    enabled: yes

- name: Template out compose file to ansible state directory on host
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/docker/docker-compose-fallback.yml' }}"
    dest: "/docker-compose-fallback.yml"
    owner: root
    group: root
    mode: '0700'

- name: Create and start Docker services
  community.docker.docker_compose:
    project_name: fallback
    project_src: "/"
    files:
      - "docker-compose-fallback.yml"
    state: present

- name: Template out pihole custom list
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/docker/pihole/custom.list' }}"
    dest: "/etc/pihole/conf/custom.list"
    owner: root
    group: root
    mode: '0755'
  register: pihole_list

- name: Template out pihole custom dnsmasq config
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/docker/pihole/custom.conf' }}"
    dest: "/etc/pihole/dnsmasq/custom.conf"
    owner: root
    group: root
    mode: '0755'
  register: pihole_dnsmasq

- name: Restart pihole if config change
  community.docker.docker_container:
    name: pihole
    restart: yes
  when: pihole_list.changed or pihole_dnsmasq.changed
