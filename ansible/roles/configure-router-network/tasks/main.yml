- name: Ensure proper packages are installed
  apt:
    name:
      - dnsmasq
      - isc-dhcp-server
      - wireguard
      - keepalived
      - netfilter-persistent
      - iptables-persistent
    state: latest
    update_cache: yes

- name: Populate route table list
  ansible.builtin.copy:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/iproute2/rt_tables' }}"
    dest: /etc/iproute2/rt_tables
    owner: root
    group: root
    mode: '0640'

- name: Generate Mullvad config
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/wireguard/mullvad-us79.conf' }}"
    dest: /etc/wireguard/mullvad-us70.conf
    owner: root
    group: root
    mode: '0755'
  register: mullvad
  become: yes

- name: Make sure Mullvad is started and enabled
  service:
    name: wg-quick@mullvad-us79
    state: started
    enabled: yes

- name: Kick Mullvad wireguard interface if changed
  service:
    name: "wg-quick@{{ mullvad_interface_name }}"
    state: restarted
    enabled: yes
  when: mullvad.changed

- name: Template the netplan config file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/netplan/config.yaml' }}"
    dest: /etc/netplan/config.yaml
    owner: root
    group: root
    mode: '0640'
  register: netplan

- name: Run Netplan config
  ansible.builtin.command: netplan apply
  become: yes
  when: netplan.changed

- name: Template the iptables rules file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/iptables/rules.v4' }}"
    dest: /etc/iptables/rules.v4
    owner: root
    group: root
    mode: '0640'
  register: iptables

- name: Copy the ipset rules file
  ansible.builtin.copy:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/iptables/rules.ipset' }}"
    dest: /etc/iptables/rules.ipset
    owner: root
    group: root
    mode: '0640'
  register: ipset

- name: Copy the ipset netfilter plugin
  ansible.builtin.copy:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/iptables/10-ipset' }}"
    dest: /usr/share/netfilter-persistent/plugins.d/10-ipset
    owner: root
    group: root
    mode: '0640'
  register: netfilter

- name: Restore netfilter rules
  ansible.builtin.command: netfilter-persistent reload
  become: yes
  when: iptables.changed or ipset.changed or netfilter.changed

- name: Setup cron script directory
  ansible.builtin.file:
    path: /root/cron
    state: directory
    mode: '0700'

- name: Setup cron script log directory
  ansible.builtin.file:
    path: /root/cron/logs
    state: directory
    mode: '0700'
  
- name: Template out cron script to populate wan ipset
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/iptables/ip_update.sh' }}"
    dest: /root/cron/ip_update.sh
    owner: root
    group: root
    mode: '0700'

- name: Sets up cronjob to populate wan ipset
  ansible.builtin.cron:
    name: "Update wan ipset"
    minute: "*/5"
    job: "{{ '/bin/bash ' + '/root/cron/ip_update.sh >> /root/cron/logs/ip_update.log 2>&1' }}"

- name: Template out cron script for DDNS
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/dns/ddns.py' }}"
    dest: /root/cron/ddns.py
    owner: root
    group: root
    mode: '0700'

- name: Sets up cronjob for DDNS
  ansible.builtin.cron:
    name: "Update public DNS records"
    minute: "*/5"
    job: "{{ '/usr/bin/python3 ' + '/root/cron/ddns.py -k ' + lookup('env', 'NAMESILO_API_KEY') + ' -d nkontur.com >> /root/cron/logs/ddns.log 2>&1' }}"

- name: Template out cron script for SSL renewal
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/ssl/renew.sh' }}"
    dest: /root/cron/renew.sh
    owner: root
    group: root
    mode: '0700'

- name: Sets up cronjob for SSL Certs
  ansible.builtin.cron:
    name: "Renew ssl certs"
    minute: "0"
    hour: "4"
    weekday: "1"
    job: "{{ '/bin/bash ' + '/root/cron/renew.sh ' + lookup('env', 'NAMESILO_API_KEY') + ' >> /root/cron/logs/ssl.log 2>&1' }}"


- name: Sync systemd-networkd drop-in files
  ansible.posix.synchronize:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/networkd/' }}"
    dest: /etc/systemd/network
    rsync_opts:
    - "--chmod=755"
  register: networkd

- name: Restart systemd-networkd when the drop-in files change
  service:
    name: systemd-networkd
    state: restarted
    enabled: yes
  when: networkd.changed

- name: Populate dnsmasq conf file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/dns/dnsmasq.conf' }}"
    dest: /etc/dnsmasq.conf
    owner: root
    group: root
    mode: '0640'
  register: dnsmasq

- name: Restart dnsmasq when the drop-in files change
  service:
    name: dnsmasq
    state: restarted
    enabled: yes
  when: dnsmasq.changed

- name: Populate DHCP conf file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/dhcp/dhcpd.conf' }}"
    dest: /etc/dhcp/dhcpd.conf
    owner: root
    group: root
    mode: '0640'
  register: dhcp

- name: Restart isc-dhcp-server when the drop-in files change
  service:
    name: isc-dhcp-server
    state: restarted
    enabled: yes
  when: dhcp.changed

- name: Populate VRRP conf file
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/networking/vrrp/keepalived.conf' }}"
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: '0640'
  register: keepalived

- name: Restart isc-dhcp-server when the drop-in files change
  service:
    name: keepalived
    state: restarted
    enabled: yes
  when: keepalived.changed
