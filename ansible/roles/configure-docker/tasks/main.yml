#- name: install python-setuptools
#  package:
#    name: python-setuptools
#    state: present
#  delegate_to: localhost

- name: ensure required pip-packages are installed within docker image
  pip:
    name:
      - docker
      - PyYAML
      - docker-compose
  delegate_to: localhost

- name: Log in to private docker repo
  docker_login:
    username: docker
    password: "{{ lookup('env', 'DOCKER_REGISTRY_KEY') }}"
    registry_url: "https://registry.lab.nkontur.com"

- name: Template out compose file to ansible state directory on host
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/docker/' + docker_compose_source_path }}"
    dest: "{{ docker_compose_dest_path + '/docker-compose.yml' }}"
    dest: "{{ docker_persistent_data_path + '/ansible_state/docker-compose.yml' }}"
    owner: root
    group: root
    mode: '0700'

- name: Create and start Docker services
  community.docker.docker_compose:
    project_name: docker
    project_src: "{{ docker_persistent_data_path }}/ansible_state"
    state: present

- name: Template out compose file to ansible state directory within container
  ansible.builtin.template:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') + '/docker/docker-compose.yml' }}"
    dest: "{{ lookup('env', 'CI_PROJECT_DIR') }}/docker/nginx"
    owner: root
    group: root
    mode: '0755'
  changed_when: false
  delegate_to: localhost

- name: Execute Python script to generate nginx custom config files
  shell:
    cmd: "/usr/bin/python3 {{ lookup('env', 'CI_PROJECT_DIR') }}/docker/nginx/generate-configs.py --workspace-path {{ lookup('env', 'CI_PROJECT_DIR') }}/docker/nginx --network {{ item.network }} --output-prefix {{ item.network }}_"
  delegate_to: localhost
  changed_when: false
  loop: "{{ nginx_config }}"

- name: initialize nginx conf file dicts
  set_fact: 
    docker_config_nginx: []

- name: create nginx conf file dicts
  set_fact:
    docker_config_nginx: "{{ docker_config_nginx + [{'src': 'docker/nginx/nginx.conf',
                        'dest': item.name + 'nginx/conf/nginx.conf',
                        'name': item.name + 'nginx' }, 
                         {'src': 'docker/nginx/' + item.network + '_stream.conf',
                        'dest': item.name + 'nginx/conf/conf.d/stream.conf',
                        'name': item.name + 'nginx' },
                        {'src': 'docker/nginx/' + item.network + '_http.conf',
                        'dest': item.name + 'nginx/conf/conf.d/http.conf',
                        'name': item.name + 'nginx' }] }}"
  loop: "{{ nginx_config }}"

- name: Copy docker configuration files
  ansible.builtin.copy:
    src: "{{ lookup('env', 'CI_PROJECT_DIR') }}/{{ item.src }}"
    dest: "{{ docker_persistent_data_path }}/{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.owner | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  register: docker_config
  loop: "{{ docker_config + docker_config_nginx }}"

- name: Restart containers if config change
  community.docker.docker_container:
    name: "{{ item.name }}"
    restart: yes
  when: item.changed
  loop: "{{ docker_config.results }}"
